<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.work.dao.UserMapper">
  <resultMap id="BaseResultMap" type="cn.com.work.entity.User">
    <id column="USER_ID" jdbcType="VARCHAR" property="userId" />
    <result column="USER_NAME" jdbcType="VARCHAR" property="userName" />
    <result column="USER_IDCARD" jdbcType="VARCHAR" property="userIdcard" />
    <result column="USER_BIRTHDATE" jdbcType="DATE" property="userBirthdate" />
    <result column="USER_BIRTHADREE" jdbcType="VARCHAR" property="userBirthadree" />
    <result column="USER_PHONE" jdbcType="VARCHAR" property="userPhone" />
    <result column="USER_CODE" jdbcType="VARCHAR" property="userCode" />
    <result column="USER_PASSWORD" jdbcType="VARCHAR" property="userPassword" />
    <result column="USER_EMAIL" jdbcType="VARCHAR" property="userEmail" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.com.work.entity.User">
    <result column="USER_IMAGE" jdbcType="LONGVARBINARY" property="userImage" />
  </resultMap>
  <sql id="Base_Column_List">
    USER_ID, USER_NAME, USER_IDCARD, USER_BIRTHDATE, USER_BIRTHADREE, USER_PHONE, USER_CODE, 
    USER_PASSWORD, USER_EMAIL
  </sql>
  <sql id="Blob_Column_List">
    USER_IMAGE
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from U_USER
    where USER_ID = #{userId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from U_USER
    where USER_ID = #{userId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="cn.com.work.entity.User">
    insert into U_USER (USER_ID, USER_NAME, USER_IDCARD, 
      USER_BIRTHDATE, USER_BIRTHADREE, USER_PHONE, 
      USER_CODE, USER_PASSWORD, USER_EMAIL, 
      USER_IMAGE)
    values (#{userId,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{userIdcard,jdbcType=VARCHAR}, 
      #{userBirthdate,jdbcType=DATE}, #{userBirthadree,jdbcType=VARCHAR}, #{userPhone,jdbcType=VARCHAR}, 
      #{userCode,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, #{userEmail,jdbcType=VARCHAR}, 
      #{userImage,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.work.entity.User">
    insert into U_USER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="userName != null">
        USER_NAME,
      </if>
      <if test="userIdcard != null">
        USER_IDCARD,
      </if>
      <if test="userBirthdate != null">
        USER_BIRTHDATE,
      </if>
      <if test="userBirthadree != null">
        USER_BIRTHADREE,
      </if>
      <if test="userPhone != null">
        USER_PHONE,
      </if>
      <if test="userCode != null">
        USER_CODE,
      </if>
      <if test="userPassword != null">
        USER_PASSWORD,
      </if>
      <if test="userEmail != null">
        USER_EMAIL,
      </if>
      <if test="userImage != null">
        USER_IMAGE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userIdcard != null">
        #{userIdcard,jdbcType=VARCHAR},
      </if>
      <if test="userBirthdate != null">
        #{userBirthdate,jdbcType=DATE},
      </if>
      <if test="userBirthadree != null">
        #{userBirthadree,jdbcType=VARCHAR},
      </if>
      <if test="userPhone != null">
        #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userCode != null">
        #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userImage != null">
        #{userImage,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.work.entity.User">
    update U_USER
    <set>
      <if test="userName != null">
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userIdcard != null">
        USER_IDCARD = #{userIdcard,jdbcType=VARCHAR},
      </if>
      <if test="userBirthdate != null">
        USER_BIRTHDATE = #{userBirthdate,jdbcType=DATE},
      </if>
      <if test="userBirthadree != null">
        USER_BIRTHADREE = #{userBirthadree,jdbcType=VARCHAR},
      </if>
      <if test="userPhone != null">
        USER_PHONE = #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userCode != null">
        USER_CODE = #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        USER_PASSWORD = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        USER_EMAIL = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userImage != null">
        USER_IMAGE = #{userImage,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where USER_ID = #{userId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.com.work.entity.User">
    update U_USER
    set USER_NAME = #{userName,jdbcType=VARCHAR},
      USER_IDCARD = #{userIdcard,jdbcType=VARCHAR},
      USER_BIRTHDATE = #{userBirthdate,jdbcType=DATE},
      USER_BIRTHADREE = #{userBirthadree,jdbcType=VARCHAR},
      USER_PHONE = #{userPhone,jdbcType=VARCHAR},
      USER_CODE = #{userCode,jdbcType=VARCHAR},
      USER_PASSWORD = #{userPassword,jdbcType=VARCHAR},
      USER_EMAIL = #{userEmail,jdbcType=VARCHAR},
      USER_IMAGE = #{userImage,jdbcType=LONGVARBINARY}
    where USER_ID = #{userId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.work.entity.User">
    update U_USER
    set USER_NAME = #{userName,jdbcType=VARCHAR},
      USER_IDCARD = #{userIdcard,jdbcType=VARCHAR},
      USER_BIRTHDATE = #{userBirthdate,jdbcType=DATE},
      USER_BIRTHADREE = #{userBirthadree,jdbcType=VARCHAR},
      USER_PHONE = #{userPhone,jdbcType=VARCHAR},
      USER_CODE = #{userCode,jdbcType=VARCHAR},
      USER_PASSWORD = #{userPassword,jdbcType=VARCHAR},
      USER_EMAIL = #{userEmail,jdbcType=VARCHAR}
    where USER_ID = #{userId,jdbcType=VARCHAR}
  </update>
</mapper>